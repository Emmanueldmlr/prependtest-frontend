{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/projects/React/prepend-frontend/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Card from '../components/main/Card';\nimport React, { useState, useEffect } from 'react';\nimport { fetchPokemons } from '../services/pokemonService';\nimport { getUrlParameters } from '../utilities/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  var _pokemons$results;\n\n  const [loading, setIsLoading] = useState(true);\n  const [pokemons, setPokemons] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!pokemons) {\n      const getPokemons = async () => {\n        try {\n          const result = await fetchPokemons();\n          console.log(result);\n          const {\n            data\n          } = result;\n          setPokemons(data);\n          setIsLoading(false);\n        } catch (err) {\n          setIsLoading(false);\n          setError(\"Error Fetching Pokemons\");\n        }\n      };\n\n      getPokemons();\n    } else {\n      setIsLoading(true);\n    }\n  }, []);\n\n  const fetchPreviousOrNextPokemons = async url => {\n    if (url) {\n      const params = getUrlParameters(url);\n      setIsLoading(fa);\n\n      try {\n        const result = await fetchPokemons(params);\n        const {\n          data\n        } = result;\n        setPokemons(data);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        setError(\"Error Fetching Pokemons\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"List of Available Pokemons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-multiple\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"first\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"second\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"third\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this) : pokemons ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: (_pokemons$results = pokemons.results) === null || _pokemons$results === void 0 ? void 0 : _pokemons$results.map((game, index) => /*#__PURE__*/_jsxDEV(Card, {\n                name: game.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 57\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"Page navigation\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"pagination justify-content-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"page-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => fetchPreviousOrNextPokemons(pokemons.previous),\n                    disabled: pokemons.previous ? false : true,\n                    className: \"page-link color-2\",\n                    style: {\n                      color: \"#ff7b79\"\n                    },\n                    children: \"Previous\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"page-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => fetchPreviousOrNextPokemons(pokemons.next),\n                    disabled: pokemons.next ? false : true,\n                    className: \"page-link\",\n                    style: {\n                      color: \"#ff7b79\"\n                    },\n                    children: \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error wa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Landing, \"tduzf3aPNLbCmnLAySckW3iDUqM=\");\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/prepend-frontend/src/pages/index.tsx"],"names":["Card","React","useState","useEffect","fetchPokemons","getUrlParameters","Landing","loading","setIsLoading","pokemons","setPokemons","error","setError","getPokemons","result","console","log","data","err","fetchPreviousOrNextPokemons","url","params","fa","results","map","game","index","name","previous","color","next"],"mappings":"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","sourcesContent":["import Card from '../components/main/Card';\n\nimport React, { useState, useEffect } from 'react'\n\nimport { fetchPokemons } from '../services/pokemonService';\n\nimport { getUrlParameters } from '../utilities/utils';\n\ninterface pokemon {\n\n    count: number | null\n\n    next: string | null,\n\n    previous: string | null,\n\n    results: { name: string, url: string }[] | null\n}\n\nconst Landing: React.FC = () => {\n\n    const [loading, setIsLoading] = useState<boolean>(true)\n\n    const [pokemons, setPokemons] = useState<pokemon | null>(null)\n\n    const [error, setError] = useState<string | null>(null)\n\n    useEffect(() => {\n\n        if (!pokemons) {\n\n            const getPokemons = async () => {\n\n                try {\n\n                    const result = await fetchPokemons()\n\n                    console.log(result)\n\n                    const { data }: { data: pokemon } = result\n\n                    setPokemons(data)\n\n                    setIsLoading(false)\n\n                }\n\n                catch (err) {\n\n                    setIsLoading(false)\n\n                    setError(\"Error Fetching Pokemons\")\n\n                }\n\n            }\n\n            getPokemons()\n\n        }\n\n        else {\n\n            setIsLoading(true)\n\n        }\n\n    }, [])\n\n    const fetchPreviousOrNextPokemons = async (url: string | null) => {\n\n        if(url){\n\n            const params = getUrlParameters(url)\n\n            setIsLoading(fa)\n\n            try {\n\n                const result = await fetchPokemons(params)\n\n                const { data }: { data: pokemon } = result\n\n                setPokemons(data)\n\n                setIsLoading(false)\n\n            }\n\n            catch (err) {\n\n                setIsLoading(false)\n\n                setError(\"Error Fetching Pokemons\")\n\n            }\n        }\n           \n    }\n\n    return (\n\n        <main>\n            <div className=\"services\">\n\n                <div className=\"container\">\n\n                    <div className=\"text-center\">\n\n                        <h2>List of Available Pokemons</h2>\n\n                        <div className=\"border-multiple\">\n\n                            <span className=\"first\"></span>\n\n                            <span className=\"second\"></span>\n\n                            <span className=\"third\"></span>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"mt-5\">\n\n                        {\n                            loading ?\n\n                                <p>Loading</p>\n\n                                :\n\n                                pokemons ? \n\n                                    <>\n\n                                        <div className=\"row\">\n\n                                                {\n                                                    pokemons.results?.map((game, index) => (\n\n                                                        <Card name={game.name} key={index}/>\n\n                                                    ))\n\n                                                }\n                                                \n                                        </div>\n\n                                        <nav aria-label=\"Page navigation\">\n\n                                            <ul className=\"pagination justify-content-center\">\n                                                \n                                                <li className=\"page-item\">\n                                                    \n                                                    <button onClick={ () => fetchPreviousOrNextPokemons(pokemons.previous)} disabled={pokemons.previous ? false : true} className=\"page-link color-2\"  style={{color: \"#ff7b79\"}}>Previous</button>\n                                                    \n                                                </li>\n\n                                                <li className=\"page-item\">\n                                                    \n                                                    <button onClick={ () => fetchPreviousOrNextPokemons(pokemons.next)} disabled={pokemons.next ? false : true}  className=\"page-link\"  style={{color: \"#ff7b79\"}}>Next</button >\n                                                    \n                                                </li>\n                                                \n                                            </ul>\n\n                                        </nav>\n\n                                    </>\n\n                                    :\n\n                                    <p>Error wa</p>\n\n                        }\n\n                    </div>\n                </div>\n            </div>\n\n        </main>\n\n    )\n\n}\n\nexport default Landing\n"]},"metadata":{},"sourceType":"module"}