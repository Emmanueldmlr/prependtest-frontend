{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/projects/React/prepend-frontend/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Card from '../components/main/Card';\nimport React, { useState, useEffect } from 'react';\nimport { fetchPokemons } from '../services/pokemonService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  var _pokemons$results;\n\n  const [loading, setIsLoading] = useState(true);\n  const [pokemons, setPokemons] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!pokemons) {\n      const getPokemons = async () => {\n        try {\n          const result = await fetchPokemons();\n          console.log(result);\n          const {\n            data\n          } = result;\n          setPokemons(data);\n          setIsLoading(false);\n        } catch (err) {\n          setIsLoading(false);\n          setError(\"Error Fetching Pokemons\");\n        }\n      };\n\n      getPokemons();\n    } else {\n      setIsLoading(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"List of Available Pokemons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-multiple\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"first\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"second\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"third\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this) : pokemons ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: (_pokemons$results = pokemons.results) === null || _pokemons$results === void 0 ? void 0 : _pokemons$results.map((game, index) => /*#__PURE__*/_jsxDEV(Card, {\n              name: game.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 53\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Error wa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Landing, \"tduzf3aPNLbCmnLAySckW3iDUqM=\");\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/prepend-frontend/src/pages/index.tsx"],"names":["Card","React","useState","useEffect","fetchPokemons","Landing","loading","setIsLoading","pokemons","setPokemons","error","setError","getPokemons","result","console","log","data","err","results","map","game","index","name"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,yBAAjB;AAEA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAASC,aAAT,QAA8B,4BAA9B;;;AAaA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAAA;;AAE5B,QAAM,CAACC,OAAD,EAAUC,YAAV,IAA0BL,QAAQ,CAAU,IAAV,CAAxC;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAiB,IAAjB,CAAxC;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAe,IAAf,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAG,CAACK,QAAJ,EAAa;AAET,YAAMI,WAAW,GAAG,YAAY;AAE5B,YAAG;AAEC,gBAAMC,MAAM,GAAG,MAAMT,aAAa,EAAlC;AAEAU,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,gBAAM;AAAEG,YAAAA;AAAF,cAA6BH,MAAnC;AAEAJ,UAAAA,WAAW,CAACO,IAAD,CAAX;AAEAT,UAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,SAZD,CAcA,OAAMU,GAAN,EAAU;AAENV,UAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAI,UAAAA,QAAQ,CAAC,yBAAD,CAAR;AAEH;AAEJ,OAxBD;;AA0BAC,MAAAA,WAAW;AAEd,KA9BD,MAgCI;AAEAL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEH;AAEJ,GAxCQ,EAwCN,EAxCM,CAAT;AA0CA,sBAEQ;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAII;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCAEI;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAII;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAMI;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAkBI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAGQD,OAAO,gBAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFG,GAMPE,QAAQ,gBAEJ;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,2CAGYA,QAAQ,CAACU,OAHrB,sDAGY,kBAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,kBAElB,QAAC,IAAD;AAAM,cAAA,IAAI,EAAED,IAAI,CAACE;AAAjB,eAA4BD,KAA5B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAHZ;AAAA;AAAA;AAAA;AAAA,kBAFI,gBAiBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BR;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFR;AA6DH,CA/GD;;GAAMhB,O;;KAAAA,O;AAiHN,eAAeA,OAAf","sourcesContent":["import Card from '../components/main/Card';\n\nimport React, {useState, useEffect} from 'react'\n\nimport { fetchPokemons } from '../services/pokemonService';\n\ninterface pokemon {\n\n    count: number | null\n\n    next: string | null,\n\n    previous: string | null,\n\n    results: {name: string, url: string}[] | null\n}\n\nconst Landing: React.FC = () => {\n\n    const [loading, setIsLoading] = useState<boolean>(true)\n\n    const [pokemons, setPokemons] = useState<pokemon | null>(null)\n\n    const [error, setError] = useState<string| null>(null)\n\n    useEffect(() => {\n\n        if(!pokemons){\n\n            const getPokemons = async () => {\n\n                try{\n\n                    const result = await fetchPokemons()\n\n                    console.log(result)\n              \n                    const { data } : {data: pokemon} = result\n\n                    setPokemons(data)\n                            \n                    setIsLoading(false)\n                          \n                }\n              \n                catch(err){\n              \n                    setIsLoading(false)\n    \n                    setError(\"Error Fetching Pokemons\")\n                            \n                }\n\n            }\n\n            getPokemons()\n\n        }\n\n        else{\n\n            setIsLoading(true)\n\n        }\n\n    }, [])\n\n    return (\n\n            <main>\n                <div className=\"services\">\n\n                    <div className=\"container\">\n\n                        <div className=\"text-center\">\n\n                            <h2>List of Available Pokemons</h2>\n\n                            <div className=\"border-multiple\">\n\n                                <span className=\"first\"></span>\n\n                                <span className=\"second\"></span>\n\n                                <span className=\"third\"></span>\n\n                            </div>\n\n                        </div>\n\n                        <div className=\"mt-5\">\n\n                            {\n                                loading ?\n\n                                    <p>Loading</p>\n\n                                :\n\n                                pokemons ? \n\n                                    <div className=\"row\">\n\n                                            {\n                                                pokemons.results?.map((game, index) => (\n\n                                                    <Card name={game.name} key={index}/>\n\n                                                ))\n\n                                            }\n                                            \n                                    </div>\n\n                                :\n\n                                <p>Error wa</p>\n                            \n                            }\n                            \n                        </div>\n                    </div>\n                </div>\n\n             </main>\n\n    )\n\n}\n\nexport default Landing\n"]},"metadata":{},"sourceType":"module"}